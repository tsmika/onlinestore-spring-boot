<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/security">


    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <!-- Use @MVC annotations -->
    <mvc:annotation-driven/>
    
    <mvc:resources mapping="/resources/**" location="/resources/"/>

    <!-- Component scan for @Controller, @Service... annotations -->
    <context:component-scan base-package="by.brest.karas*"/>

    <!-- SpringResourceTemplateResolver-->
<bean id="templateResolver"
      class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
    <property name="prefix" value="/WEB-INF/templates/" />
    <property name="suffix" value=".html" />
    <property name="templateMode" value="HTML" />
    <property name="cacheable" value="false" />
</bean>

    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

<!--    ///////////////////-->
    <import resource="classpath:test-db.xml"/>
<!--    <import resource="security.xml"/>-->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:dao.properties</value>
            </list>
        </property>
    </bean>


    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <bean id="productDao" class="by.brest.karas.dao.jdbc.ProductDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="productDtoDao" class="by.brest.karas.dao.jdbc.ProductDtoDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>

    <bean id="productService" class="by.brest.karas.service.impl.ProductServiceImpl">
        <constructor-arg name="productDao" ref="productDao"/>
    </bean>

    <bean id="productDtoService" class="by.brest.karas.service.impl.ProductDtoServiceImpl">
        <constructor-arg name="productDtoDao" ref="productDtoDao"/>
    </bean>

    <bean id="customerDao" class="by.brest.karas.dao.jdbc.CustomerDaoJdbc">
        <constructor-arg ref="namedParameterJdbcTemplate"/>
    </bean>
    <bean id="customerService" class="by.brest.karas.service.impl.CustomerServiceImpl">
        <constructor-arg name="customerDao" ref="customerDao"/>
    </bean>



<!--    ///////////////////////////////-->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="org.h2.Driver"/>-->
<!--        <property name="url" value="jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1"/>-->
<!--        <property name="username" value="sa"/>-->
<!--        <property name="password" value="password"/>-->
<!--    </bean>-->

<!--    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
<!--        <property name="dataSource" ref="dataSource"/>-->
<!--    </bean>-->

<!--    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">-->
<!--        <constructor-arg name="strength" value="11" />-->
<!--    </bean>-->
    <!--    ////////////////////////////-->



</beans>